#!/usr/bin/env bash

if [[ -z ${1+x} ]] || [[ "$1" == "--help" ]] || [[ "$1" == "-h" ]]; then
    echo "Rename files in directory"
    echo ""
    echo "USAGE: batch-rename [PATTERN]"
    echo ""
    echo "The PATTERN must be a sed pattern, and it's suggested to enclose it"
    echo "in single quotes, in order to escape the necessary backslashes."
    echo "To capture groups, use escaped parentheses '\(...\)'."
    echo "To use a captured group, use an escaped integer corresponding to its"
    # shellcheck disable=SC2028
    echo "  index, such as '\1' for the first captrured group."
    echo "To capture digits, use the pattern '[0-9]'."
    echo "To capture one or more digits, use an escaped plus '[0-9]\+'."
    echo "To capture 4 digits, use the pattern '[0-9]\{4\}'."
    echo ""
    echo "EXAMPLES: "
    # shellcheck disable=SC2028
    echo "  batch-rename 's/\([^0-9]\+\)\([0-9]\+\)/\2-\1/'"
    echo "  ciao123.txt -> 123-ciao.txt"
    exit 0
fi
for f in *; do
    NEWNAME=$(sed "$1" <<<"$f")
    if [[ $NEWNAME != "$f" ]]; then
        echo "$f -> $NEWNAME"
    fi
done

echo -n "Procede to rename? [y/N] "
read -rn1 CONTINUE
echo ""

if [[ $CONTINUE == "y" ]] || [[ $CONTINUE == "Y" ]]; then
    for f in *; do
        NEWNAME=$(sed "$1" <<<"$f")
        if [[ $NEWNAME != "$f" ]]; then
            mv -- "$f" "$NEWNAME"
        fi
    done
else
    echo "Aborting"
fi
