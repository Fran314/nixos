#!/usr/bin/env python

import sys
import os

aliases = [
    [
        lambda window: (
            window[1] == "firefox"
            and (
                window[0].endswith("Private Browsing")
                or window[0].endswith("Navigazione anonima")
            )
        ),
        "firefox-private",
    ],
    [lambda window: window[1] == "firefox", "firefox"],
    [lambda window: window[1] == "Gimp", "gimp"],
    [lambda window: window[1] == "Inkscape", "inkscape"],
    [lambda window: window[1] == "Code", "vscode"],
    [lambda window: window[1] == "octave-gui", "octave"],
    [lambda window: window[1] == "krita", "krita"],
    [lambda window: window[1] == "vlc", "vlc"],
    [lambda window: window[1] == "Aseprite", "aseprite"],
    #
    # steam games
    [
        lambda window: window[0].startswith(
            "The Elder Scrolls IV: Oblivion Remastered"
        ),
        "oblivion",
    ],
    [lambda window: window[1] == "steam", "steam"],
    #
    # persistent processes should be second to last
    [lambda window: window[1] == "TelegramDesktop", "telegram"],
    [lambda window: window[1] == "Spotify", "spotify"],
    #
    # terminal should be last
    [lambda window: window[1] == "Alacritty", "terminal"],
]


def get_process_type(window):
    for [check, alias] in aliases:
        if check(window):
            return alias
    return "unknown"


def get_most_relevant_process(processes):
    for [_, alias] in aliases:
        if alias in processes:
            return alias
    return "unknown"


current = sys.argv[1]
maxws = (int(current) - 1) if current.isnumeric() else -1
data = os.popen("wmctrl -l").readlines()
workspaces = [[] for _ in range(11)]

for line in data:
    split_line = line.split()
    pos = int(split_line[1])
    name = " ".join(split_line[3:])
    class_name = (
        os.popen(f"xprop -id {split_line[0]} WM_CLASS |  cut -d '\"' -f4")
        .readline()
        .rstrip()
    )
    if pos <= 8:
        maxws = max(pos, maxws)
    workspaces[pos].append([name, class_name])

numbws = ["" for _ in range(maxws + 1)]
icons = ["" for _ in range(maxws + 1)]
for i in range(maxws + 1):
    state = "visible"
    if str(i + 1) == current:
        state = "current"
    elif len(workspaces[i]) > 0:
        state = "active"
    icon = get_most_relevant_process(
        [get_process_type(window) for window in workspaces[i]]
    )

    numbws[i] = f'{{ "id": "{i + 1}", "state": "{state}", "icon": "{icon}" }}'

dashboard_state = "visible"
if current == "dashboard":
    dashboard_state = "current"

scratchpad_state = "invisible"
if current == "scratchpad":
    scratchpad_state = "current"
elif len(workspaces[10]) > 0:
    scratchpad_state = "visible"

print(
    f'{{ "numbered-ws": [ {", ".join(numbws)} ], "dashboard": "{dashboard_state}", "scratchpad": "{scratchpad_state}", "current": "{current}" }}'
)
